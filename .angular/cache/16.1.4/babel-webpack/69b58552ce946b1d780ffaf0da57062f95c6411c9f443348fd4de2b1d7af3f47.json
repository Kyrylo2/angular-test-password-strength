{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/progress-bar\";\nconst _c0 = function (a0) {\n  return {\n    red: a0\n  };\n};\nconst _c1 = function (a0, a1) {\n  return {\n    red: a0,\n    yellow: a1\n  };\n};\nconst _c2 = function (a0, a1) {\n  return {\n    red: a0,\n    green: a1\n  };\n};\nexport class PasswordStrengthComponent {\n  constructor() {\n    this.password = '';\n    this.hidePassword = true;\n    this.passwordStrength = 0;\n  }\n  calculateStrength() {\n    // No need to perform calculations here, the strength is determined by CSS classes\n  }\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n  }\n  getPasswordStrengthPercentage() {\n    if (!this.password) {\n      this.passwordStrength = 0;\n    }\n    // Use regular expressions to check the password for letters, digits, and symbols\n    const hasLetters = /[a-zA-Z]/.test(this.password);\n    const hasDigits = /\\d/.test(this.password);\n    const hasSymbols = /[!@#$%^&*()_+{}[\\]:;<>,.?~\\\\/\\-|=]/.test(this.password);\n    if (hasLetters && hasDigits && hasSymbols) {\n      // Strong password: has letters, digits, and symbols\n      this.passwordStrength = 100;\n    } else if (hasLetters && hasDigits || hasLetters && hasSymbols || hasDigits && hasSymbols) {\n      // Medium password: combination of letters-digits, letters-symbols, or digits-symbols\n      this.passwordStrength = 66;\n    } else {\n      // Easy password: only letters, digits, or symbols\n      this.passwordStrength = 33;\n    }\n  }\n  // getPasswordStrengthPercentage() {\n  //   if (!this.password) {\n  //     return 0;\n  //   } else if (this.password.length < 8) {\n  //     return 33;\n  //   } else if (this.password.length >= 8 && this.password.length < 12) {\n  //     return 66;\n  //   } else {\n  //     return 100;\n  //   }\n  // }\n  getProgressBarColor() {\n    if (this.passwordStrength === 100) {\n      return 'green';\n    } else if (this.passwordStrength >= 66) {\n      return 'yellow';\n    } else {\n      return 'red';\n    }\n  }\n  getProgressBarClass() {\n    if (!this.password) {\n      return 'lightgrey-progress';\n    } else if (this.passwordStrength === 100) {\n      return 'green-progress';\n    } else if (this.passwordStrength >= 66) {\n      return 'yellow-progress';\n    } else {\n      return 'red-progress';\n    }\n  }\n}\nPasswordStrengthComponent.ɵfac = function PasswordStrengthComponent_Factory(t) {\n  return new (t || PasswordStrengthComponent)();\n};\nPasswordStrengthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PasswordStrengthComponent,\n  selectors: [[\"app-password-strength\"]],\n  decls: 27,\n  vars: 16,\n  consts: [[1, \"container\"], [1, \"example-full-width\"], [\"matInput\", \"\", \"placeholder\", \"Enter Password\", 3, \"type\", \"ngModel\", \"ngModelChange\", \"input\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 1, \"mat-icon-button-styles\", 3, \"click\"], [1, \"strength-sections\"], [1, \"strength-section\", \"lightgray\", 3, \"ngClass\"], [\"mode\", \"determinate\", \"color\", \"red\", 1, \"progress__bar-basic-style\", 3, \"value\", \"ngClass\"]],\n  template: function PasswordStrengthComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Password Strength Test\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\")(4, \"mat-form-field\", 1)(5, \"mat-label\");\n      i0.ɵɵtext(6, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function PasswordStrengthComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.password = $event;\n      })(\"input\", function PasswordStrengthComponent_Template_input_input_7_listener() {\n        return ctx.calculateStrength();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function PasswordStrengthComponent_Template_button_click_8_listener() {\n        return ctx.togglePasswordVisibility();\n      });\n      i0.ɵɵelementStart(9, \"mat-icon\");\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"mat-hint\");\n      i0.ɵɵtext(12, \"Password strength will be evaluated instantly!\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"div\", 4)(14, \"div\", 5);\n      i0.ɵɵelement(15, \"div\");\n      i0.ɵɵelementStart(16, \"span\");\n      i0.ɵɵtext(17, \"Weak\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 5);\n      i0.ɵɵelement(19, \"div\");\n      i0.ɵɵelementStart(20, \"span\");\n      i0.ɵɵtext(21, \"Medium\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 5);\n      i0.ɵɵelement(23, \"div\");\n      i0.ɵɵelementStart(24, \"span\");\n      i0.ɵɵtext(25, \"Strong\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(26, \"mat-progress-bar\", 6);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵpropertyInterpolate(\"type\", ctx.hidePassword ? \"password\" : \"text\");\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.hidePassword ? \"visibility_off\" : \"visibility\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx.password && ctx.passwordStrength === 33 || ctx.password && ctx.password.length < 8));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(10, _c1, ctx.password && ctx.password.length < 8, ctx.password && ctx.password.length >= 8 && ctx.passwordStrength >= 66));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(13, _c2, ctx.password && ctx.password.length < 8, ctx.password && ctx.password.length >= 8 && ctx.passwordStrength >= 100));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"value\", ctx.passwordStrength)(\"ngClass\", ctx.getProgressBarClass());\n    }\n  },\n  dependencies: [i1.NgClass, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i3.MatInput, i4.MatFormField, i4.MatLabel, i4.MatHint, i4.MatSuffix, i5.MatIcon, i6.MatProgressBar],\n  styles: [\".example-full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 25px;\\n  margin: 25px;\\n}\\n\\n.strength-sections[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 5px;\\n}\\n\\n.strength-section[_ngcontent-%COMP%] {\\n  flex-grow: 1;\\n  height: 20px;\\n\\n  position: relative;\\n  text-align: center;\\n}\\n\\n.strength-section[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.mat-icon-button-styles[_ngcontent-%COMP%] {\\n  border: none;\\n  margin: 0 20px;\\n  background-color: transparent;\\n  cursor: pointer;\\n  &:hover {\\n    fill: red;\\n    outline: 1px solid grey;\\n    background-color: lightgray;\\n    padding: auto;\\n    border-radius: 20px;\\n  }\\n}\\n\\n.mdc-linear-progress__bar-inner[_ngcontent-%COMP%] {\\n  border-color: none !important;\\n}\\n\\n.lightgray[_ngcontent-%COMP%] {\\n  background-color: lightgray;\\n}\\n\\n.red[_ngcontent-%COMP%] {\\n  background-color: red;\\n}\\n\\n.yellow[_ngcontent-%COMP%] {\\n  background-color: yellow;\\n}\\n\\n.green[_ngcontent-%COMP%] {\\n  background-color: green;\\n}\\n\\n.progress__bar-basic-style[_ngcontent-%COMP%] {\\n  &.lightgrey-progress {\\n    --mdc-linear-progress-active-indicator-color: lightgray;\\n    --mdc-linear-progress-track-color: rgba(196, 191, 205, 0.25);\\n  }\\n\\n  &.red-progress {\\n    --mdc-linear-progress-active-indicator-color: red;\\n    --mdc-linear-progress-track-color: rgba(183, 58, 58, 0.25);\\n  }\\n\\n  &.yellow-progress {\\n    --mdc-linear-progress-active-indicator-color: yellow;\\n    --mdc-linear-progress-track-color: rgba(183, 177, 58, 0.25);\\n  }\\n\\n  &.green-progress {\\n    --mdc-linear-progress-active-indicator-color: green;\\n    --mdc-linear-progress-track-color: rgba(103, 58, 183, 0.25);\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFzc3dvcmQtc3RyZW5ndGgvcGFzc3dvcmQtc3RyZW5ndGguY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsU0FBUztFQUNULFlBQVk7QUFDZDs7QUFFQTtFQUNFLGFBQWE7RUFDYixRQUFRO0FBQ1Y7O0FBRUE7RUFDRSxZQUFZO0VBQ1osWUFBWTs7RUFFWixrQkFBa0I7RUFDbEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxZQUFZO0VBQ1osY0FBYztFQUNkLDZCQUE2QjtFQUM3QixlQUFlO0VBQ2Y7SUFDRSxTQUFTO0lBQ1QsdUJBQXVCO0lBQ3ZCLDJCQUEyQjtJQUMzQixhQUFhO0lBQ2IsbUJBQW1CO0VBQ3JCO0FBQ0Y7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSwyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSx3QkFBd0I7QUFDMUI7O0FBRUE7RUFDRSx1QkFBdUI7QUFDekI7O0FBRUE7RUFDRTtJQUNFLHVEQUF1RDtJQUN2RCw0REFBNEQ7RUFDOUQ7O0VBRUE7SUFDRSxpREFBaUQ7SUFDakQsMERBQTBEO0VBQzVEOztFQUVBO0lBQ0Usb0RBQW9EO0lBQ3BELDJEQUEyRDtFQUM3RDs7RUFFQTtJQUNFLG1EQUFtRDtJQUNuRCwyREFBMkQ7RUFDN0Q7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWZ1bGwtd2lkdGgge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGdhcDogMjVweDtcbiAgbWFyZ2luOiAyNXB4O1xufVxuXG4uc3RyZW5ndGgtc2VjdGlvbnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBnYXA6IDVweDtcbn1cblxuLnN0cmVuZ3RoLXNlY3Rpb24ge1xuICBmbGV4LWdyb3c6IDE7XG4gIGhlaWdodDogMjBweDtcblxuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnN0cmVuZ3RoLXNlY3Rpb24gZGl2IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4ubWF0LWljb24tYnV0dG9uLXN0eWxlcyB7XG4gIGJvcmRlcjogbm9uZTtcbiAgbWFyZ2luOiAwIDIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gICY6aG92ZXIge1xuICAgIGZpbGw6IHJlZDtcbiAgICBvdXRsaW5lOiAxcHggc29saWQgZ3JleTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7XG4gICAgcGFkZGluZzogYXV0bztcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xuICB9XG59XG5cbi5tZGMtbGluZWFyLXByb2dyZXNzX19iYXItaW5uZXIge1xuICBib3JkZXItY29sb3I6IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLmxpZ2h0Z3JheSB7XG4gIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JheTtcbn1cblxuLnJlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJlZDtcbn1cblxuLnllbGxvdyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcbn1cblxuLmdyZWVuIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XG59XG5cbi5wcm9ncmVzc19fYmFyLWJhc2ljLXN0eWxlIHtcbiAgJi5saWdodGdyZXktcHJvZ3Jlc3Mge1xuICAgIC0tbWRjLWxpbmVhci1wcm9ncmVzcy1hY3RpdmUtaW5kaWNhdG9yLWNvbG9yOiBsaWdodGdyYXk7XG4gICAgLS1tZGMtbGluZWFyLXByb2dyZXNzLXRyYWNrLWNvbG9yOiByZ2JhKDE5NiwgMTkxLCAyMDUsIDAuMjUpO1xuICB9XG5cbiAgJi5yZWQtcHJvZ3Jlc3Mge1xuICAgIC0tbWRjLWxpbmVhci1wcm9ncmVzcy1hY3RpdmUtaW5kaWNhdG9yLWNvbG9yOiByZWQ7XG4gICAgLS1tZGMtbGluZWFyLXByb2dyZXNzLXRyYWNrLWNvbG9yOiByZ2JhKDE4MywgNTgsIDU4LCAwLjI1KTtcbiAgfVxuXG4gICYueWVsbG93LXByb2dyZXNzIHtcbiAgICAtLW1kYy1saW5lYXItcHJvZ3Jlc3MtYWN0aXZlLWluZGljYXRvci1jb2xvcjogeWVsbG93O1xuICAgIC0tbWRjLWxpbmVhci1wcm9ncmVzcy10cmFjay1jb2xvcjogcmdiYSgxODMsIDE3NywgNTgsIDAuMjUpO1xuICB9XG5cbiAgJi5ncmVlbi1wcm9ncmVzcyB7XG4gICAgLS1tZGMtbGluZWFyLXByb2dyZXNzLWFjdGl2ZS1pbmRpY2F0b3ItY29sb3I6IGdyZWVuO1xuICAgIC0tbWRjLWxpbmVhci1wcm9ncmVzcy10cmFjay1jb2xvcjogcmdiYSgxMDMsIDU4LCAxODMsIDAuMjUpO1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["PasswordStrengthComponent","constructor","password","hidePassword","passwordStrength","calculateStrength","togglePasswordVisibility","getPasswordStrengthPercentage","hasLetters","test","hasDigits","hasSymbols","getProgressBarColor","getProgressBarClass","selectors","decls","vars","consts","template","PasswordStrengthComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PasswordStrengthComponent_Template_input_ngModelChange_7_listener","$event","PasswordStrengthComponent_Template_input_input_7_listener","PasswordStrengthComponent_Template_button_click_8_listener","ɵɵelement","ɵɵadvance","ɵɵpropertyInterpolate","ɵɵproperty","ɵɵtextInterpolate","ɵɵpureFunction1","_c0","length","ɵɵpureFunction2","_c1","_c2"],"sources":["/Users/kyrylosavchenko/Programming/GitHub/angular-test-password-strength/src/app/password-strength/password-strength.component.ts","/Users/kyrylosavchenko/Programming/GitHub/angular-test-password-strength/src/app/password-strength/password-strength.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-password-strength',\n  templateUrl: './password-strength.component.html',\n  styleUrls: ['./password-strength.component.css'],\n})\nexport class PasswordStrengthComponent {\n  password: string = '';\n  hidePassword: boolean = true;\n  passwordStrength: number = 0;\n\n  calculateStrength() {\n    // No need to perform calculations here, the strength is determined by CSS classes\n  }\n\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n  }\n\n  getPasswordStrengthPercentage() {\n    if (!this.password) {\n      this.passwordStrength = 0;\n    }\n\n    // Use regular expressions to check the password for letters, digits, and symbols\n    const hasLetters = /[a-zA-Z]/.test(this.password);\n    const hasDigits = /\\d/.test(this.password);\n    const hasSymbols = /[!@#$%^&*()_+{}[\\]:;<>,.?~\\\\/\\-|=]/.test(this.password);\n\n    if (hasLetters && hasDigits && hasSymbols) {\n      // Strong password: has letters, digits, and symbols\n      this.passwordStrength = 100;\n    } else if (\n      (hasLetters && hasDigits) ||\n      (hasLetters && hasSymbols) ||\n      (hasDigits && hasSymbols)\n    ) {\n      // Medium password: combination of letters-digits, letters-symbols, or digits-symbols\n      this.passwordStrength = 66;\n    } else {\n      // Easy password: only letters, digits, or symbols\n      this.passwordStrength = 33;\n    }\n  }\n\n  // getPasswordStrengthPercentage() {\n  //   if (!this.password) {\n  //     return 0;\n  //   } else if (this.password.length < 8) {\n  //     return 33;\n  //   } else if (this.password.length >= 8 && this.password.length < 12) {\n  //     return 66;\n  //   } else {\n  //     return 100;\n  //   }\n  // }\n\n  getProgressBarColor() {\n    if (this.passwordStrength === 100) {\n      return 'green';\n    } else if (this.passwordStrength >= 66) {\n      return 'yellow';\n    } else {\n      return 'red';\n    }\n  }\n\n  getProgressBarClass() {\n    if (!this.password) {\n      return 'lightgrey-progress';\n    } else if (this.passwordStrength === 100) {\n      return 'green-progress';\n    } else if (this.passwordStrength >= 66) {\n      return 'yellow-progress';\n    } else {\n      return 'red-progress';\n    }\n  }\n}\n","<div class=\"container\">\n  <h1>Password Strength Test</h1>\n  <div>\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Password</mat-label>\n      <input\n        type=\"{{ hidePassword ? 'password' : 'text' }}\"\n        matInput\n        [(ngModel)]=\"password\"\n        (input)=\"calculateStrength()\"\n        placeholder=\"Enter Password\"\n      />\n      <button\n        mat-icon-button\n        matSuffix\n        (click)=\"togglePasswordVisibility()\"\n        class=\"mat-icon-button-styles\"\n      >\n        <mat-icon>{{\n          hidePassword ? 'visibility_off' : 'visibility'\n        }}</mat-icon>\n      </button>\n      <mat-hint>Password strength will be evaluated instantly!</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <div class=\"strength-sections\">\n    <div\n      class=\"strength-section lightgray\"\n      [ngClass]=\"{\n        red:\n          (password && passwordStrength === 33) ||\n          (password && password.length < 8)\n      }\"\n    >\n      <div></div>\n      <span>Weak</span>\n    </div>\n    <div\n      class=\"strength-section lightgray\"\n      [ngClass]=\"{\n        red: password && password.length < 8,\n        yellow: password && password.length >= 8 && passwordStrength >= 66\n      }\"\n    >\n      <div></div>\n      <span>Medium</span>\n    </div>\n    <div\n      class=\"strength-section lightgray\"\n      [ngClass]=\"{\n        red: password && password.length < 8,\n        green: password && password.length >= 8 && passwordStrength >= 100\n      }\"\n    >\n      <div></div>\n      <span>Strong</span>\n    </div>\n  </div>\n  <mat-progress-bar\n    mode=\"determinate\"\n    color=\"red\"\n    class=\"progress__bar-basic-style\"\n    [value]=\"passwordStrength\"\n    [ngClass]=\"getProgressBarClass()\"\n  ></mat-progress-bar>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}