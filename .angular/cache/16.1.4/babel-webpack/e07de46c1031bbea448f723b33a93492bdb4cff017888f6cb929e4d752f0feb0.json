{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/progress-bar\";\nconst _c0 = function (a0) {\n  return {\n    red: a0\n  };\n};\nconst _c1 = function (a0) {\n  return {\n    yellow: a0\n  };\n};\nconst _c2 = function (a0) {\n  return {\n    green: a0\n  };\n};\nexport class PasswordStrengthComponent {\n  constructor() {\n    this.password = '';\n    this.hidePassword = true;\n    this.currentColor = 'lightgrey';\n  }\n  calculateStrength() {\n    // No need to perform calculations here, the strength is determined by CSS classes\n  }\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n  }\n  getPasswordStrengthPercentage() {\n    if (!this.password) {\n      return 0;\n    } else if (this.password.length < 8) {\n      return 33;\n    } else if (this.password.length >= 8 && this.password.length < 12) {\n      return 66;\n    } else {\n      return 100;\n    }\n  }\n  getProgressBarColor() {\n    if (this.getPasswordStrengthPercentage() === 100) {\n      return 'green';\n    } else if (this.getPasswordStrengthPercentage() >= 66) {\n      return 'yellow';\n    } else {\n      return 'red';\n    }\n  }\n  getProgressBarClass() {\n    if (!this.password) {\n      return 'lightgrey';\n    } else if (this.getPasswordStrengthPercentage() === 100) {\n      return 'green-progress';\n    } else if (this.getPasswordStrengthPercentage() >= 66) {\n      return 'yellow-progress';\n    } else {\n      return 'red-progress';\n    }\n  }\n}\nPasswordStrengthComponent.ɵfac = function PasswordStrengthComponent_Factory(t) {\n  return new (t || PasswordStrengthComponent)();\n};\nPasswordStrengthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PasswordStrengthComponent,\n  selectors: [[\"app-password-strength\"]],\n  decls: 25,\n  vars: 14,\n  consts: [[1, \"container\"], [1, \"example-full-width\"], [\"matInput\", \"\", \"placeholder\", \"Enter Password\", 3, \"type\", \"ngModel\", \"ngModelChange\", \"input\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 1, \"mat-icon-button-styles\", 3, \"click\"], [\"mode\", \"determinate\", \"color\", \"red\", 1, \"progress__bar-basic-style\", 3, \"value\", \"ngClass\"], [1, \"strength-sections\"], [1, \"strength-section\", \"lightgray\", 3, \"ngClass\"]],\n  template: function PasswordStrengthComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\")(2, \"mat-form-field\", 1)(3, \"mat-label\");\n      i0.ɵɵtext(4, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function PasswordStrengthComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.password = $event;\n      })(\"input\", function PasswordStrengthComponent_Template_input_input_5_listener() {\n        return ctx.calculateStrength();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function PasswordStrengthComponent_Template_button_click_6_listener() {\n        return ctx.togglePasswordVisibility();\n      });\n      i0.ɵɵelementStart(7, \"mat-icon\");\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"mat-hint\");\n      i0.ɵɵtext(10, \"Password strength will be evaluated instantly!\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(11, \"mat-progress-bar\", 4);\n      i0.ɵɵelementStart(12, \"div\", 5)(13, \"div\", 6);\n      i0.ɵɵelement(14, \"div\");\n      i0.ɵɵelementStart(15, \"span\");\n      i0.ɵɵtext(16, \"Weak\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 6);\n      i0.ɵɵelement(18, \"div\");\n      i0.ɵɵelementStart(19, \"span\");\n      i0.ɵɵtext(20, \"Medium\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 6);\n      i0.ɵɵelement(22, \"div\");\n      i0.ɵɵelementStart(23, \"span\");\n      i0.ɵɵtext(24, \"Strong\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵpropertyInterpolate(\"type\", ctx.hidePassword ? \"password\" : \"text\");\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.hidePassword ? \"visibility_off\" : \"visibility\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"value\", ctx.getPasswordStrengthPercentage())(\"ngClass\", ctx.getProgressBarClass());\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx.password && ctx.password.length < 8));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c1, ctx.password && ctx.password.length >= 8 && ctx.password.length < 12));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c2, ctx.password && ctx.password.length >= 12));\n    }\n  },\n  dependencies: [i1.NgClass, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i3.MatInput, i4.MatFormField, i4.MatLabel, i4.MatHint, i4.MatSuffix, i5.MatIcon, i6.MatProgressBar],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 740:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\n\\\\nSyntaxError\\\\n\\\\n(58:14) /Users/kyrylosavchenko/Programming/GitHub/angular-test-password-strength/src/app/password-strength/password-strength.component.css Missed semicolon\\\\n\\\\n \\\\u001b[90m 56 | \\\\u001b[39m  & \\\\u001b[33m.lightgray\\\\u001b[39m \\\\u001b[33m{\\\\u001b[39m\\\\n \\\\u001b[90m 57 | \\\\u001b[39m    --mdc-linear-progress-active-indicator-color\\\\u001b[33m:\\\\u001b[39m \\\\u001b[35m#lightgray\\\\u001b[39m\\\\u001b[33m;\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 58 | \\\\u001b[39m    color\\\\u001b[33m:\\\\u001b[39mred\\\\n \\\\u001b[90m    | \\\\u001b[39m             \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 59 | \\\\u001b[39m    --mdc-linear-progress-track-color\\\\u001b[33m:\\\\u001b[39m \\\\u001b[36mrgba\\\\u001b[39m\\\\u001b[36m(103, 58, 183, 0.25)\\\\u001b[39m\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 60 | \\\\u001b[39m  \\\\u001b[33m}\\\\u001b[39m\\\\n\\\");\\n\\n\\n })\\n\\n\\n \\t});\\n\\n\\n\\n \\t\\n\\n \\t// startup\\n\\n \\t// Load entry module and return exports\\n\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n\\n \\tvar __webpack_exports__ = {};\\n\\n \\t__webpack_modules__[740]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\\n/*# sourceMappingURL=password-strength.component.css.map*/\"]\n});","map":{"version":3,"names":["PasswordStrengthComponent","constructor","password","hidePassword","currentColor","calculateStrength","togglePasswordVisibility","getPasswordStrengthPercentage","length","getProgressBarColor","getProgressBarClass","selectors","decls","vars","consts","template","PasswordStrengthComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PasswordStrengthComponent_Template_input_ngModelChange_5_listener","$event","PasswordStrengthComponent_Template_input_input_5_listener","PasswordStrengthComponent_Template_button_click_6_listener","ɵɵelement","ɵɵadvance","ɵɵpropertyInterpolate","ɵɵproperty","ɵɵtextInterpolate","ɵɵpureFunction1","_c0","_c1","_c2"],"sources":["/Users/kyrylosavchenko/Programming/GitHub/angular-test-password-strength/src/app/password-strength/password-strength.component.ts","/Users/kyrylosavchenko/Programming/GitHub/angular-test-password-strength/src/app/password-strength/password-strength.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-password-strength',\n  templateUrl: './password-strength.component.html',\n  styleUrls: ['./password-strength.component.css'],\n})\nexport class PasswordStrengthComponent {\n  password: string = '';\n  hidePassword: boolean = true;\n  currentColor: string = 'lightgrey';\n\n  calculateStrength() {\n    // No need to perform calculations here, the strength is determined by CSS classes\n  }\n\n  togglePasswordVisibility() {\n    this.hidePassword = !this.hidePassword;\n  }\n\n  getPasswordStrengthPercentage() {\n    if (!this.password) {\n      return 0;\n    } else if (this.password.length < 8) {\n      return 33;\n    } else if (this.password.length >= 8 && this.password.length < 12) {\n      return 66;\n    } else {\n      return 100;\n    }\n  }\n\n  getProgressBarColor() {\n    if (this.getPasswordStrengthPercentage() === 100) {\n      return 'green';\n    } else if (this.getPasswordStrengthPercentage() >= 66) {\n      return 'yellow';\n    } else {\n      return 'red';\n    }\n  }\n\n  getProgressBarClass() {\n    if (!this.password) {\n      return 'lightgrey';\n    } else if (this.getPasswordStrengthPercentage() === 100) {\n      return 'green-progress';\n    } else if (this.getPasswordStrengthPercentage() >= 66) {\n      return 'yellow-progress';\n    } else {\n      return 'red-progress';\n    }\n  }\n}\n","<div class=\"container\">\n  <div>\n    <mat-form-field class=\"example-full-width\">\n      <mat-label>Password</mat-label>\n      <input\n        type=\"{{ hidePassword ? 'password' : 'text' }}\"\n        matInput\n        [(ngModel)]=\"password\"\n        (input)=\"calculateStrength()\"\n        placeholder=\"Enter Password\"\n      />\n      <button\n        mat-icon-button\n        matSuffix\n        (click)=\"togglePasswordVisibility()\"\n        class=\"mat-icon-button-styles\"\n      >\n        <mat-icon>{{\n          hidePassword ? 'visibility_off' : 'visibility'\n        }}</mat-icon>\n      </button>\n      <mat-hint>Password strength will be evaluated instantly!</mat-hint>\n    </mat-form-field>\n  </div>\n\n  <mat-progress-bar\n    mode=\"determinate\"\n    color=\"red\"\n    class=\"progress__bar-basic-style\"\n    [value]=\"getPasswordStrengthPercentage()\"\n    [ngClass]=\"getProgressBarClass()\"\n  ></mat-progress-bar>\n\n  <div class=\"strength-sections\">\n    <div\n      class=\"strength-section lightgray\"\n      [ngClass]=\"{ red: password && password.length < 8 }\"\n    >\n      <div></div>\n      <span>Weak</span>\n    </div>\n    <div\n      class=\"strength-section lightgray\"\n      [ngClass]=\"{\n        yellow: password && password.length >= 8 && password.length < 12\n      }\"\n    >\n      <div></div>\n      <span>Medium</span>\n    </div>\n    <div\n      class=\"strength-section lightgray\"\n      [ngClass]=\"{ green: password && password.length >= 12 }\"\n    >\n      <div></div>\n      <span>Strong</span>\n    </div>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}